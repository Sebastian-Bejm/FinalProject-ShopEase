@page "/cart"
@using ShopEaseApp.Models
@using ShopEaseApp.Services
@inject CartService CartService

<h3>Your Cart</h3>

@if (!CartService.CartItems.Any())
{
    <p>Your cart is empty.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Category</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var group in CartService.CartItems.GroupBy(p => p.ProductID))
            {
                var product = group.First();
                var quantity = group.Count();
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Category</td>
                    <td>$@product.Price</td>
                    <td>
                        <input type="number" min="0" value="@quantity" @onchange="e => UpdateQuantity(product, e.Value?.ToString())" class="form-control form-control-sm" style="width: 80px;" />
                    </td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="() => RemoveOne(product.ProductID)">Remove One</button>
                        <button class="btn btn-warning btn-sm" @onclick="() => RemoveAll(product)">Remove All</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="mt-3">
        <strong>Total: $@CartService.CalculateTotal().ToString("0.##")</strong>
    </div>
}

@code {
    private void RemoveOne(int productId)
    {
        CartService.RemoveProduct(productId);
    }

    private void RemoveAll(Product product)
    {
        CartService.SetProductQuantity(product, 0);
    }

    private void UpdateQuantity(Product product, string? value)
    {
        if (int.TryParse(value, out int quantity) && quantity >= 0)
        {
            CartService.SetProductQuantity(product, quantity);
        }
    }
}
